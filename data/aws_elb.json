{
    "aws_elb": {
        "status": "HOLD",
        "subcategory": "Elastic Load Balancing (ELB Classic)",
        "layout": "aws",
        "page_title": "AWS: aws_elb",
        "description": "Provides an Elastic Load Balancer resource.",
        "arguments": {
            "name": {
                "description": "The name of the ELB. By default generated by Terraform.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "name_prefix": {
                "description": "Creates a unique name beginning with the specified",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "access_logs": {
                "description": "An Access Logs block. Access Logs documented below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "availability_zones": {
                "description": "The AZ's to serve traffic in.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "security_groups": {
                "description": "A list of security group IDs to assign to the ELB.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "subnets": {
                "description": "A list of subnet IDs to attach to the ELB.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "instances": {
                "description": "A list of instance ids to place in the ELB pool.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "internal": {
                "description": "If true, ELB will be an internal ELB.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "listener": {
                "description": "A list of listener blocks. Listeners documented below.",
                "required": true,
                "policy": "",
                "notes": ""
            },
            "health_check": {
                "description": "A health_check block. Health Check documented below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "cross_zone_load_balancing": {
                "description": "Enable cross-zone load balancing. Default: `true`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "idle_timeout": {
                "description": "The time in seconds that the connection is allowed to be idle. Default: `60`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "connection_draining": {
                "description": "Boolean to enable connection draining. Default: `false`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "connection_draining_timeout": {
                "description": "The time in seconds to allow for connections to drain. Default: `300`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "tags": {
                "description": "A mapping of tags to assign to the resource.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "bucket": {
                "description": "The S3 bucket name to store the logs in.",
                "required": true,
                "policy": "",
                "notes": ""
            },
            "bucket_prefix": {
                "description": "The S3 bucket prefix. Logs are stored in the root if not configured.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "interval": {
                "description": "The interval between checks.",
                "required": true,
                "policy": "",
                "notes": ""
            },
            "enabled": {
                "description": "Boolean to enable / disable `access_logs`. Default is `true`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "instance_port": {
                "description": "The port on the instance to route to",
                "required": true,
                "policy": "",
                "notes": ""
            },
            "instance_protocol": {
                "description": "The protocol to use to the instance. Valid",
                "required": true,
                "policy": "",
                "notes": ""
            },
            "lb_port": {
                "description": "The port to listen on for the load balancer",
                "required": true,
                "policy": "",
                "notes": ""
            },
            "lb_protocol": {
                "description": "The protocol to listen on. Valid values are `HTTP`,",
                "required": true,
                "policy": "",
                "notes": ""
            },
            "ssl_certificate_id": {
                "description": "The ARN of an SSL certificate you have",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "healthy_threshold": {
                "description": "The number of checks before the instance is declared healthy.",
                "required": true,
                "policy": "",
                "notes": ""
            },
            "unhealthy_threshold": {
                "description": "The number of checks before the instance is declared unhealthy.",
                "required": true,
                "policy": "",
                "notes": ""
            },
            "target": {
                "description": "The target of the check. Valid pattern is \"${PROTOCOL}:${PORT}${PATH}\", where PROTOCOL",
                "required": true,
                "policy": "",
                "notes": ""
            },
            "timeout": {
                "description": "The length of time before the check times out.",
                "required": true,
                "policy": "",
                "notes": ""
            }
        },
        "attributes": {
            "id": {
                "description": "The name of the ELB"
            },
            "arn": {
                "description": "The ARN of the ELB"
            },
            "name": {
                "description": "The name of the ELB"
            },
            "dns_name": {
                "description": "The DNS name of the ELB"
            },
            "instances": {
                "description": "The list of instances in the ELB"
            },
            "source_security_group": {
                "description": "The name of the security group that you can use as"
            },
            "source_security_group_id": {
                "description": "The ID of the security group that you can use as"
            },
            "zone_id": {
                "description": "The canonical hosted zone ID of the ELB (to be used in a Route 53 Alias record)"
            }
        },
        "timeouts": {}
    }
}