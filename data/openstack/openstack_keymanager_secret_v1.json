{
    "openstack_keymanager_secret_v1": {
        "status": "ASSESS",
        "layout": "openstack",
        "page_title": "OpenStack: openstack_keymanager_secret_v1",
        "sidebar_current": "docs-openstack-resource-keymanager-secret-v1",
        "description": "Manages a V1 Barbican secret resource within OpenStack.",
        "arguments": {
            "region": {
                "description": "The region in which to obtain the V1 KeyManager client.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "name": {
                "description": "Human-readable name for the Secret. Does not have",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "bit_length": {
                "description": "Metadata provided by a user or system for informational purposes.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "algorithm": {
                "description": "Metadata provided by a user or system for informational purposes.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "mode": {
                "description": "Metadata provided by a user or system for informational purposes.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "secret_type": {
                "description": "Used to indicate the type of secret being stored. For more information see [Secret types](https://docs.openstack.org/barbican/latest/api/reference/secret_types.html).",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "payload": {
                "description": "The secret's data to be stored. **payload\\_content\\_type** must also be supplied if **payload** is included.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "payload_content_type": {
                "description": "(required if **payload** is included",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "payload_content_encoding": {
                "description": "(required if **payload** is encoded",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "expiration": {
                "description": "The expiration time of the secret in the RFC3339 timestamp format (e.g. `2019-03-09T12:58:49Z`). If omitted, a secret will never expire. Changing this creates a new secret.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "metadata": {
                "description": "Additional Metadata for the secret.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "acl": {
                "description": "Allows to control an access to a secret. Currently only the",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "project_access": {
                "description": "Whether the secret is accessible project wide.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "users": {
                "description": "The list of user IDs, which are allowed to access the",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "created_at": {
                "description": "The date the secret ACL was created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "updated_at": {
                "description": "The date the secret ACL was last updated.",
                "required": false,
                "policy": "",
                "notes": ""
            }
        },
        "attributes": {
            "secret_ref": {
                "description": "The secret reference / where to find the secret."
            },
            "region": {
                "description": "See Argument Reference above."
            },
            "name": {
                "description": "See Argument Reference above."
            },
            "bit_length": {
                "description": "See Argument Reference above."
            },
            "algorithm": {
                "description": "See Argument Reference above."
            },
            "mode": {
                "description": "See Argument Reference above."
            },
            "secret_type": {
                "description": "See Argument Reference above."
            },
            "payload": {
                "description": "See Argument Reference above."
            },
            "payload_content_type": {
                "description": "See Argument Reference above."
            },
            "acl": {
                "description": "See Argument Reference above."
            },
            "payload_content_encoding": {
                "description": "See Argument Reference above."
            },
            "expiration": {
                "description": "See Argument Reference above."
            },
            "content_types": {
                "description": "The map of the content types, assigned on the secret."
            },
            "creator_id": {
                "description": "The creator of the secret."
            },
            "status": {
                "description": "The status of the secret."
            },
            "created_at": {
                "description": "The date the secret was created."
            },
            "updated_at": {
                "description": "The date the secret was last updated."
            },
            "all_metadata": {
                "description": "The map of metadata, assigned on the secret, which has been"
            }
        },
        "timeouts": {}
    }
}