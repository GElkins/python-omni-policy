{
    "azurerm_app_service_slot": {
        "status": "ASSESS",
        "subcategory": "App Service (Web Apps)",
        "layout": "azurerm",
        "page_title": "Azure Resource Manager: azurerm_app_service_slot",
        "description": "Manages an App Service Slot (within an App Service).",
        "arguments": {
            "name": {
                "description": "The name of the Connection String.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "resource_group_name": {
                "description": "The name of the resource group in which to create the App Service Slot component.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "location": {
                "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "app_service_plan_id": {
                "description": "The ID of the App Service Plan within which to create this App Service Slot. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "app_service_name": {
                "description": "The name of the App Service within which to create the App Service Slot.  Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "app_settings": {
                "description": "A key-value pair of App Settings.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "auth_settings": {
                "description": "A `auth_settings` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "connection_string": {
                "description": "An `connection_string` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "client_affinity_enabled": {
                "description": "Should the App Service Slot send session affinity cookies, which route client requests in the same session to the same instance?",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "enabled": {
                "description": "Is Authentication enabled?",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "https_only": {
                "description": "Can the App Service Slot only be accessed via HTTPS? Defaults to `false`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "site_config": {
                "description": "A `site_config` object as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "identity": {
                "description": "A Managed Service Identity block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "tags": {
                "description": "A mapping of tags to assign to the resource.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "type": {
                "description": "Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "value": {
                "description": "The value for the Connection String.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "app_command_line": {
                "description": "App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "always_on": {
                "description": "Should the app be loaded at all times? Defaults to `false`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "cors": {
                "description": "A `cors` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "default_documents": {
                "description": "The ordering of default documents to load, if an address isn't specified.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "dotnet_framework_version": {
                "description": "The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "http2_enabled": {
                "description": "Is HTTP2 Enabled on this App Service? Defaults to `false`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "ip_restriction": {
                "description": "A [List of objects](/docs/configuration/attr-as-blocks.html",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "java_container": {
                "description": "The Java Container to use. If specified `java_version` and `java_container_version` must also be specified. Possible values are `JETTY` and `TOMCAT`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "java_container_version": {
                "description": "The version of the Java Container to use. If specified `java_version` and `java_container` must also be specified.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "java_version": {
                "description": "The version of Java to use. If specified `java_container` and `java_container_version` must also be specified. Possible values are `1.7`, `1.8`, and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "local_mysql_enabled": {
                "description": "Is \"MySQL In App\" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "managed_pipeline_mode": {
                "description": "The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "min_tls_version": {
                "description": "The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "php_version": {
                "description": "The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "python_version": {
                "description": "The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "remote_debugging_enabled": {
                "description": "Is Remote Debugging Enabled? Defaults to `false`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "remote_debugging_version": {
                "description": "Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015`, and `VS2017`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "scm_type": {
                "description": "The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "use_32_bit_worker_process": {
                "description": "Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "virtual_network_name": {
                "description": "The name of the Virtual Network which this App Service Slot should be attached to.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "websockets_enabled": {
                "description": "Should WebSockets be enabled?",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "auto_swap_slot_name": {
                "description": "The name of the swap to automatically swap to during deployment",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allowed_origins": {
                "description": "A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "support_credentials": {
                "description": "Are credentials supported?",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "active_directory": {
                "description": "A `active_directory` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "additional_login_params": {
                "description": "Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form \"key=value\".",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allowed_external_redirect_urls": {
                "description": "External URLs that can be redirected to as part of logging in or logging out of the app.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "default_provider": {
                "description": "The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "facebook": {
                "description": "A `facebook` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "google": {
                "description": "A `google` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "issuer": {
                "description": "Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "microsoft": {
                "description": "A `microsoft` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "runtime_version": {
                "description": "The runtime version of the Authentication/Authorization module.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "token_refresh_extension_hours": {
                "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "token_store_enabled": {
                "description": "If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "twitter": {
                "description": "A `twitter` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "unauthenticated_client_action": {
                "description": "The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "client_id": {
                "description": "The OAuth 2.0 client ID that was created for the app used for authentication.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "client_secret": {
                "description": "The OAuth 2.0 client secret that was created for the app used for authentication.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allowed_audiences": {
                "description": "Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "app_id": {
                "description": "The App ID of the Facebook app used for login",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "app_secret": {
                "description": "The App Secret of the Facebook app used for Facebook Login.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "oauth_scopes": {
                "description": "The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "ip_address": {
                "description": "The IP Address used for this IP Restriction.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "subnet_mask": {
                "description": "The Subnet mask used for this IP Restriction. Defaults to `255.255.255.255`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "identity_ids": {
                "description": "Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "application_logs": {
                "description": "An `application_logs` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "http_logs": {
                "description": "An `http_logs` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "azure_blob_storage": {
                "description": "An `azure_blob_storage` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "file_system": {
                "description": "A `file_system` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "level": {
                "description": "The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `http_logs`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "sas_url": {
                "description": "The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "retention_in_days": {
                "description": "The number of days to retain logs for.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "retention_in_mb": {
                "description": "The maximum size in megabytes that http log files can use before being removed.",
                "required": false,
                "policy": "",
                "notes": ""
            }
        },
        "attributes": {
            "id": {
                "description": "The ID of the App Service Slot."
            },
            "default_site_hostname": {
                "description": "The Default Hostname associated with the App Service Slot "
            },
            "site_credential": {
                "description": "A `site_credential` block as defined below, which contains the site-level credentials used to publish to this App Service."
            },
            "username": {
                "description": "The username which can be used to publish to this App Service"
            },
            "password": {
                "description": "The password associated with the username, which can be used to publish to this App Service."
            }
        },
        "timeouts": {
            "create": {
                "description": "Used when creating the App Service Slot.",
                "required": false,
                "timeout": 30
            },
            "update": {
                "description": "Used when updating the App Service Slot.",
                "required": false,
                "timeout": 30
            },
            "read": {
                "description": "Used when retrieving the App Service Slot.",
                "required": false,
                "timeout": 5
            },
            "delete": {
                "description": "Used when deleting the App Service Slot.",
                "required": false,
                "timeout": 30
            }
        }
    }
}