{
    "azurerm_api_management_authorization_server": {
        "status": "ASSESS",
        "subcategory": "API Management",
        "layout": "azurerm",
        "page_title": "Azure Resource Manager: azurerm_api_management_authorization_server",
        "description": "Manages an Authorization Server within an API Management Service.",
        "arguments": {
            "api_management_name": {
                "description": "The name of the API Management Service in which this Authorization Server should be created. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "authorization_methods": {
                "description": "The HTTP Verbs supported by the Authorization Endpoint. Possible values are `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " `GET` must always be present."
                ]
            },
            "authorization_endpoint": {
                "description": "The OAUTH Authorization Endpoint.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "client_id": {
                "description": "The Client/App ID registered with this Authorization Server.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "client_registration_endpoint": {
                "description": "The URI of page where Client/App Registration is performed for this Authorization Server.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "display_name": {
                "description": "The user-friendly name of this Authorization Server.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "grant_types": {
                "description": "Form of Authorization Grants required when requesting an Access Token. Possible values are `authorizationCode`, `clientCredentials`, `implicit` and `resourceOwnerPassword`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "name": {
                "description": "The Name of the Parameter.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "resource_group_name": {
                "description": "The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "bearer_token_sending_methods": {
                "description": "The mechanism by which Access Tokens are passed to the API. Possible values are `authorizationHeader` and `query`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "client_authentication_method": {
                "description": "The Authentication Methods supported by the Token endpoint of this Authorization Server.. Possible values are `Basic` and `Body`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "client_secret": {
                "description": "The Client/App Secret registered with this Authorization Server.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "default_scope": {
                "description": "The Default Scope used when requesting an Access Token, specified as a string containing space-delimited values.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "description": {
                "description": "A description of the Authorization Server, which may contain HTML formatting tags.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "resource_owner_password": {
                "description": "The password associated with the Resource Owner.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " This can only be specified when `grant_type` includes `resourceOwnerPassword`."
                ]
            },
            "resource_owner_username": {
                "description": "The username associated with the Resource Owner.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " This can only be specified when `grant_type` includes `resourceOwnerPassword`."
                ]
            },
            "support_state": {
                "description": "Does this Authorization Server support State? If this is set to `true` the client may use the state parameter to raise protocol security.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "token_body_parameters": {
                "description": "A `token_body_parameters` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "token_endpoint": {
                "description": "The OAUTH Token Endpoint.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "value": {
                "description": "The Value of the Parameter.",
                "required": false,
                "policy": "",
                "notes": ""
            }
        },
        "attributes": {
            "id": {
                "description": "The ID of the API Management Authorization Server."
            }
        },
        "timeouts": {
            "create": {
                "description": "Used when creating the API Management Authorization Server.",
                "required": false,
                "timeout": 30
            },
            "update": {
                "description": "Used when updating the API Management Authorization Server.",
                "required": false,
                "timeout": 30
            },
            "read": {
                "description": "Used when retrieving the API Management Authorization Server.",
                "required": false,
                "timeout": 5
            },
            "delete": {
                "description": "Used when deleting the API Management Authorization Server.",
                "required": false,
                "timeout": 30
            }
        }
    }
}