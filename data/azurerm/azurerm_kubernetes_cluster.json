{
    "azurerm_kubernetes_cluster": {
        "status": "ASSESS",
        "subcategory": "Container",
        "layout": "azurerm",
        "page_title": "Azure Resource Manager: azurerm_kubernetes_cluster",
        "description": "Manages a managed Kubernetes Cluster (also known as AKS / Azure Kubernetes Service)",
        "arguments": {
            "name": {
                "description": "The name which should be used for the default Kubernetes Node Pool. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "location": {
                "description": "The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "resource_group_name": {
                "description": "Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "default_node_pool": {
                "description": "A `default_node_pool` block as defined below.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " The `default_node_pool` block will become required in 2.0"
                ]
            },
            "dns_prefix": {
                "description": "DNS prefix specified when creating the managed cluster. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " The `dns_prefix` must contain between 3 and 45 characters, and can contain only letters, numbers, and hyphens. It must start with a letter and must end with a letter or a number."
                ]
            },
            "addon_profile": {
                "description": "A `addon_profile` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "api_server_authorized_ip_ranges": {
                "description": "The IP ranges to whitelist for incoming traffic to the masters.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "enable_pod_security_policy": {
                "description": "Whether Pod Security Policies are enabled. Note that this also requires role based access control to be enabled.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " Support for `enable_pod_security_policy` is currently in Preview on an opt-in basis. To use it, enable feature `PodSecurityPolicyPreview` for `namespace Microsoft.ContainerService`. For an example of how to enable a Preview feature, please visit [Register scale set feature provider](https://docs.microsoft.com/en-us/azure/aks/cluster-autoscaler#register-scale-set-feature-provider)."
                ]
            },
            "identity": {
                "description": "A `identity` block as defined below. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " One of either `identity` or `service_principal` must be specified."
                ]
            },
            "kubernetes_version": {
                "description": "Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade).",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " Upgrading your cluster may take up to 10 minutes per node."
                ]
            },
            "linux_profile": {
                "description": "A `linux_profile` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "network_profile": {
                "description": "A `network_profile` block as defined below.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " If `network_profile` is not defined, `kubenet` profile will be used by default."
                ]
            },
            "node_resource_group": {
                "description": "The name of the Resource Group where the Kubernetes Nodes should exist. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " Azure requires that a new, non-existent Resource Group is used, as otherwise the provisioning of the Kubernetes Service will fail."
                ]
            },
            "role_based_access_control": {
                "description": "A `role_based_access_control` block. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "service_principal": {
                "description": "A `service_principal` block as documented below.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " One of either `identity` or `service_principal` must be specified."
                ]
            },
            "tags": {
                "description": "A mapping of tags to assign to the Node Pool.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "windows_profile": {
                "description": "A `windows_profile` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "enabled": {
                "description": "Is Role Based Access Control Enabled? Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "subnet_name": {
                "description": "The subnet name for the virtual nodes to run. This is required when `aci_connector_linux` `enabled` argument is set to `true`.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " AKS will add a delegation to the subnet named here. To prevent further runs from failing you should make sure that the subnet you create for virtual nodes has a delegation, like so."
                ]
            },
            "aci_connector_linux": {
                "description": "A `aci_connector_linux` block. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/en-us/azure/aks/virtual-nodes-portal).",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " At this time ACI Connector's are not supported in Azure China."
                ]
            },
            "azure_policy": {
                "description": "A `azure_policy` block as defined below. For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)",
                "required": false,
                "policy": "",
                "notes": [
                    "-> **NOTE**: Azure Policy for Azure Kubernetes Service is currently in preview and not available to subscriptions that have not [opted-in](https://docs.microsoft.com/en-us/azure/governance/policy/concepts/rego-for-aks?toc=/azure/aks/toc.json) to join `Azure Policy` preview."
                ]
            },
            "http_application_routing": {
                "description": "A `http_application_routing` block as defined below.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " At this time HTTP Application Routing is not supported in Azure China or Azure US Government."
                ]
            },
            "kube_dashboard": {
                "description": "A `kube_dashboard` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "oms_agent": {
                "description": "A `oms_agent` block as defined below. For more details, please visit [How to onboard Azure Monitor for containers](https://docs.microsoft.com/en-us/azure/monitoring/monitoring-container-insights-onboard).",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "client_app_id": {
                "description": "The Client ID of an Azure Active Directory Application.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "server_app_id": {
                "description": "The Server ID of an Azure Active Directory Application.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "server_app_secret": {
                "description": "The Server Secret of an Azure Active Directory Application.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "tenant_id": {
                "description": "The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "vm_size": {
                "description": "The size of the Virtual Machine, such as `Standard_DS2_v2`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "availability_zones": {
                "description": "A list of Availability Zones across which the Node Pool should be spread.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " This requires that the `type` is set to `VirtualMachineScaleSets` and that `load_balancer_sku` is set to `Standard`."
                ]
            },
            "enable_auto_scaling": {
                "description": "Should [the Kubernetes Auto Scaler](https://docs.microsoft.com/en-us/azure/aks/cluster-autoscaler",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " If you're using AutoScaling, you may wish to use [Terraform's `ignore_changes` functionality](https://www.terraform.io/docs/configuration/resources.html#ignore_changes) to ignore changes to the `node_count` field."
                ]
            },
            "enable_node_public_ip": {
                "description": "Should nodes in this Node Pool have a Public IP Address? Defaults to `false`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "max_pods": {
                "description": "The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "node_labels": {
                "description": "A map of Kubernetes labels which should be applied to nodes in the Default Node Pool.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "node_taints": {
                "description": "A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`).",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "os_disk_size_gb": {
                "description": "The size of the OS Disk which should be used for each agent in the Node Pool. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "type": {
                "description": "The type of Node Pool which should be created. Possible values are `AvailabilitySet` and `VirtualMachineScaleSets`. Defaults to `VirtualMachineScaleSets`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "vnet_subnet_id": {
                "description": "The ID of a Subnet where the Kubernetes Node Pool should exist. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "max_count": {
                "description": "The maximum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "min_count": {
                "description": "The minimum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "node_count": {
                "description": "The number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " If `enable_auto_scaling` is set to `false` both `min_count` and `max_count` fields need to be set to `null` or omitted from the configuration."
                ]
            },
            "admin_username": {
                "description": "The Admin Username for Windows VMs.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "ssh_key": {
                "description": "An `ssh_key` block. Only one is currently allowed. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "network_plugin": {
                "description": "Network plugin to use for networking. Currently supported values are `azure` and `kubenet`. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " When `network_plugin` is set to `azure` - the `vnet_subnet_id` field in the `default_node_pool` block must be set and `pod_cidr` must not be set."
                ]
            },
            "network_policy": {
                "description": "Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/en-us/azure/aks/use-network-policies). Currently supported values are `calico` and `azure`. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "dns_service_ip": {
                "description": "IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). This is required when `network_plugin` is set to `azure`. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "docker_bridge_cidr": {
                "description": "IP address (in CIDR notation",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "outbound_type": {
                "description": "The outbound (egress",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "pod_cidr": {
                "description": "The CIDR to use for pod IP addresses. This field can only be set when `network_plugin` is set to `kubenet`. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "service_cidr": {
                "description": "The Network Range used by the Kubernetes service. This is required when `network_plugin` is set to `azure`. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "load_balancer_sku": {
                "description": "Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `Basic` and `Standard`. Defaults to `Standard`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "load_balancer_profile": {
                "description": "A `load_balancer_profile` block. This can only be specified when `load_balancer_sku` is set to `Standard`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "managed_outbound_ip_count": {
                "description": "Count of desired managed outbound IPs for the cluster load balancer. Must be in the range of [1, 100].",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "outbound_ip_prefix_ids": {
                "description": "The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "outbound_ip_address_ids": {
                "description": "The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "log_analytics_workspace_id": {
                "description": "The ID of the Log Analytics Workspace which the OMS Agent should send data to. Must be present if `enabled` is `true`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "azure_active_directory": {
                "description": "An `azure_active_directory` block.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "client_id": {
                "description": "The Client ID for the Service Principal.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "client_secret": {
                "description": "The Client Secret for the Service Principal.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "key_data": {
                "description": "The Public SSH Key used to access the cluster. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "admin_password": {
                "description": "The Admin Password for Windows VMs.",
                "required": false,
                "policy": "",
                "notes": ""
            }
        },
        "attributes": {
            "id": {
                "description": "The Kubernetes Managed Cluster ID."
            },
            "fqdn": {
                "description": "The FQDN of the Azure Kubernetes Managed Cluster."
            },
            "private_fqdn": {
                "description": "The FQDN for the Kubernetes Cluster when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster."
            },
            "kube_admin_config": {
                "description": "A `kube_admin_config` block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled."
            },
            "kube_admin_config_raw": {
                "description": "Raw Kubernetes config for the admin account to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled."
            },
            "kube_config": {
                "description": "A `kube_config` block as defined below."
            },
            "kube_config_raw": {
                "description": "Raw Kubernetes config to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools"
            },
            "http_application_routing": {
                "description": "A `http_application_routing` block as defined below."
            },
            "node_resource_group": {
                "description": "The auto-generated Resource Group which contains the resources for this Managed Kubernetes Cluster."
            },
            "kubelet_identity": {
                "description": "A `kubelet_identity` block as defined below.  "
            },
            "http_application_routing_zone_name": {
                "description": "The Zone Name of the HTTP Application Routing."
            },
            "effective_outbound_ips": {
                "description": "The outcome (resource IDs) of the specified arguments."
            },
            "principal_id": {
                "description": "The principal id of the system assigned identity which is used by master components."
            },
            "tenant_id": {
                "description": "The tenant id of the system assigned identity which is used by master components."
            },
            "client_id": {
                "description": "The Client ID of the user-defined Managed Identity assigned to the Kubelets."
            },
            "object_id": {
                "description": "The Object ID of the user-defined Managed Identity assigned to the Kubelets."
            },
            "user_assigned_identity_id": {
                "description": "The ID of the User Assigned Identity assigned to the Kubelets."
            },
            "client_key": {
                "description": "Base64 encoded private key used by clients to authenticate to the Kubernetes cluster."
            },
            "client_certificate": {
                "description": "Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster."
            },
            "cluster_ca_certificate": {
                "description": "Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster."
            },
            "host": {
                "description": "The Kubernetes cluster server host."
            },
            "username": {
                "description": "A username used to authenticate to the Kubernetes cluster."
            },
            "password": {
                "description": "A password or token used to authenticate to the Kubernetes cluster."
            }
        },
        "timeouts": {
            "create": {
                "description": "Used when creating the Kubernetes Cluster.",
                "required": false,
                "timeout": 90
            },
            "update": {
                "description": "Used when updating the Kubernetes Cluster.",
                "required": false,
                "timeout": 90
            },
            "read": {
                "description": "Used when retrieving the Kubernetes Cluster.",
                "required": false,
                "timeout": 5
            },
            "delete": {
                "description": "Used when deleting the Kubernetes Cluster.",
                "required": false,
                "timeout": 90
            }
        }
    }
}