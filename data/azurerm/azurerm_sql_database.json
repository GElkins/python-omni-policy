{
    "azurerm_sql_database": {
        "status": "ASSESS",
        "subcategory": "Database",
        "layout": "azurerm",
        "page_title": "Azure Resource Manager: azurerm_sql_database",
        "description": "Manages a SQL Database.",
        "arguments": {
            "name": {
                "description": "The name of the database.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "resource_group_name": {
                "description": "The name of the resource group in which to create the database.  This must be the same as Database Server resource group currently.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "location": {
                "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "server_name": {
                "description": "The name of the SQL Server on which to create the database.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "create_mode": {
                "description": "Specifies how to create the database. Valid values are: `Default`, `Copy`, `OnlineSecondary`, `NonReadableSecondary`,  `PointInTimeRestore`, `Recovery`, `Restore` or `RestoreLongTermRetentionBackup`. Must be `Default` to create a new database. Defaults to `Default`. Please see [Azure SQL Database REST API](https://docs.microsoft.com/en-us/rest/api/sql/databases/createorupdate#createmode)",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "source_database_id": {
                "description": "The URI of the source database if `create_mode` value is not `Default`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "restore_point_in_time": {
                "description": "The point in time for the restore. Only applies if `create_mode` is `PointInTimeRestore` e.g. 2013-11-08T22:00:40Z",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "edition": {
                "description": "The edition of the database to be created. Applies only if `create_mode` is `Default`. Valid values are: `Basic`, `Standard`, `Premium`, `DataWarehouse`, `Business`, `BusinessCritical`, `Free`, `GeneralPurpose`, `Hyperscale`, `Premium`, `PremiumRS`, `Standard`, `Stretch`, `System`, `System2`, or `Web`. Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "collation": {
                "description": "The name of the collation. Applies only if `create_mode` is `Default`.  Azure default is `SQL_LATIN1_GENERAL_CP1_CI_AS`. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "max_size_bytes": {
                "description": "The maximum size that the database can grow to. Applies only if `create_mode` is `Default`.  Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "requested_service_objective_id": {
                "description": "A GUID/UUID corresponding to a configured Service Level Objective for the Azure SQL database which can be used to configure a performance level.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "requested_service_objective_name": {
                "description": "The service objective name for the database. Valid values depend on edition and location and may include `S0`, `S1`, `S2`, `S3`, `P1`, `P2`, `P4`, `P6`, `P11` and `ElasticPool`. You can list the available names with the cli: ```shell az sql db list-editions -l westus --edition Standard -o table ```. For further information please see [Azure CLI - az sql db](https://docs.microsoft.com/en-us/cli/azure/sql/db?view=azure-cli-latest#az-sql-db-list-editions).",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "source_database_deletion_date": {
                "description": "The deletion date time of the source database. Only applies to deleted databases where `create_mode` is `PointInTimeRestore`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "elastic_pool_name": {
                "description": "The name of the elastic database pool.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "threat_detection_policy": {
                "description": "Threat detection policy configuration. The `threat_detection_policy` block supports fields documented below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "read_scale": {
                "description": "Read-only connections will be redirected to a high-available replica. Please see [Use read-only replicas to load-balance read-only query workloads](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-read-scale-out).",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "zone_redundant": {
                "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "extended_auditing_policy": {
                "description": "A `extended_auditing_policy` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "tags": {
                "description": "A mapping of tags to assign to the resource.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "storage_uri": {
                "description": "Specifies the blob URI of the .bacpac file.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "storage_key": {
                "description": "Specifies the access key for the storage account.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "storage_key_type": {
                "description": "Specifies the type of access key for the storage account. Valid values are `StorageAccessKey` or `SharedAccessKey`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "administrator_login": {
                "description": "Specifies the name of the SQL administrator.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "administrator_login_password": {
                "description": "Specifies the password of the SQL administrator.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "authentication_type": {
                "description": "Specifies the type of authentication used to access the server. Valid values are `SQL` or `ADPassword`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "operation_mode": {
                "description": "Specifies the type of import operation being performed. The only allowable value is `Import`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "state": {
                "description": "The State of the Policy. Possible values are `Enabled`, `Disabled` or `New`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "disabled_alerts": {
                "description": "Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "email_account_admins": {
                "description": "Should the account administrators be emailed when this alert is triggered?",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "email_addresses": {
                "description": "A list of email addresses which alerts should be sent to.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "retention_days": {
                "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "storage_account_access_key": {
                "description": " Specifies the access key to use for the auditing storage account.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "storage_endpoint": {
                "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net).",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "use_server_default": {
                "description": "Should the default server policy be used? Defaults to `Disabled`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "storage_account_access_key_is_secondary": {
                "description": "Specifies whether `storage_account_access_key` value is the storage's secondary key.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "retention_in_days": {
                "description": "Specifies the number of days to retain logs for in the storage account.",
                "required": false,
                "policy": "",
                "notes": ""
            }
        },
        "attributes": {
            "id": {
                "description": "The SQL Database ID."
            },
            "creation_date": {
                "description": "The creation date of the SQL Database."
            },
            "default_secondary_location": {
                "description": "The default secondary location of the SQL Database."
            }
        },
        "timeouts": {
            "create": {
                "description": "Used when creating the SQL Database.",
                "required": false,
                "timeout": 60
            },
            "update": {
                "description": "Used when updating the SQL Database.",
                "required": false,
                "timeout": 60
            },
            "read": {
                "description": "Used when retrieving the SQL Database.",
                "required": false,
                "timeout": 5
            },
            "delete": {
                "description": "Used when deleting the SQL Database.",
                "required": false,
                "timeout": 60
            }
        }
    }
}