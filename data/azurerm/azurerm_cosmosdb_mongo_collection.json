{
    "azurerm_cosmosdb_mongo_collection": {
        "status": "ASSESS",
        "subcategory": "CosmosDB (DocumentDB)",
        "layout": "azurerm",
        "page_title": "Azure Resource Manager: azurerm_cosmosdb_mongo_collection",
        "description": "Manages a Mongo Collection within a Cosmos DB Account.",
        "arguments": {
            "name": {
                "description": "Specifies the name of the Cosmos DB Mongo Collection. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "resource_group_name": {
                "description": "The name of the resource group in which the Cosmos DB Mongo Collection is created. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "database_name": {
                "description": "The name of the Cosmos DB Mongo Database in which the Cosmos DB Mongo Collection is created. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "default_ttl_seconds": {
                "description": "The default Time To Live in seconds. If the value is `0` items are not automatically expired.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "shard_key": {
                "description": "The name of the key to partition on for sharding. There must not be any other unique index keys.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "index": {
                "description": "One or more `index` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "throughput": {
                "description": "The throughput of the MongoDB collection (RU/s). Must be set in increments of `100`. The minimum value is `400`. This must be set upon database creation otherwise it cannot be updated without a manual terraform destroy-apply.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "keys": {
                "description": "Specifies the list of user settable keys for each Cosmos DB Mongo Collection.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "unique": {
                "description": "Is the index unique or not? Defaults to `false`.",
                "required": false,
                "policy": "",
                "notes": ""
            }
        },
        "attributes": {
            "id": {
                "description": "The ID of the Cosmos DB Mongo Collection."
            },
            "system_indexes": {
                "description": "One or more `system_indexes` blocks as defined below."
            },
            "keys": {
                "description": "The list of system keys which are not settable for each Cosmos DB Mongo Collection."
            },
            "unique": {
                "description": "Identifies whether the table contains no duplicate values."
            }
        },
        "timeouts": {
            "create": {
                "description": "Used when creating the CosmosDB Mongo Collection.",
                "required": false,
                "timeout": 30
            },
            "update": {
                "description": "Used when updating the CosmosDB Mongo Collection.",
                "required": false,
                "timeout": 30
            },
            "read": {
                "description": "Used when retrieving the CosmosDB Mongo Collection.",
                "required": false,
                "timeout": 5
            },
            "delete": {
                "description": "Used when deleting the CosmosDB Mongo Collection.",
                "required": false,
                "timeout": 30
            }
        }
    }
}