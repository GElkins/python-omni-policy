{
    "azurerm_redis_cache": {
        "status": "ASSESS",
        "subcategory": "Redis",
        "layout": "azurerm",
        "page_title": "Azure Resource Manager: azurerm_redis_cache",
        "description": "Manages a Redis Cache",
        "arguments": {
            "name": {
                "description": "The name of the Redis instance. Changing this forces a",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "location": {
                "description": "The location of the resource group.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "resource_group_name": {
                "description": "The name of the resource group in which to",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "capacity": {
                "description": "The size of the Redis cache to deploy. Valid values for a SKU `family` of C (Basic/Standard",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "family": {
                "description": "The SKU family/pricing group to use. Valid values are `C` (for Basic/Standard SKU family",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "sku_name": {
                "description": "The SKU of Redis to use. Possible values are `Basic`, `Standard` and `Premium`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "enable_non_ssl_port": {
                "description": "Enable the non-SSL port (6379",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "minimum_tls_version": {
                "description": "The minimum TLS version.  Defaults to `1.0`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "patch_schedule": {
                "description": "A list of `patch_schedule` blocks as defined below - only available for Premium SKU's.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "private_static_ip_address": {
                "description": "The Static IP Address to assign to the Redis Cache when hosted inside the Virtual Network. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "redis_configuration": {
                "description": "A `redis_configuration` as defined below - with some limitations by SKU - defaults/details are shown below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "shard_count": {
                "description": "*Only available when using the Premium SKU* The number of Shards to create on the Redis Cluster.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "subnet_id": {
                "description": "*Only available when using the Premium SKU* The ID of the Subnet within which the Redis Cache should be deployed. This Subnet must only contain Azure Cache for Redis instances without any other type of resources. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "tags": {
                "description": "A mapping of tags to assign to the resource.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "zones": {
                "description": "A list of a single item of the Availability Zone which the Redis Cache should be allocated in.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> **Please Note**: Availability Zones are [in Preview and only supported in several regions at this time](https://docs.microsoft.com/en-us/azure/availability-zones/az-overview) - as such you must be opted into the Preview to use this functionality. You can [opt into the Availability Zones Preview in the Azure Portal](http://aka.ms/azenroll)."
                ]
            },
            "enable_authentication": {
                "description": "If set to `false`, the Redis instance will be accessible without authentication. Defaults to `true`.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " `enable_authentication` can only be set to `false` if a `subnet_id` is specified; and only works if there aren't existing instances within the subnet with `enable_authentication` set to `true`."
                ]
            },
            "maxmemory_reserved": {
                "description": "Value in megabytes reserved for non-cache usage e.g. failover. Defaults are shown below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "maxmemory_delta": {
                "description": "The max-memory delta for this Redis instance. Defaults are shown below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "maxmemory_policy": {
                "description": "How Redis will select what to remove when `maxmemory` is reached. Defaults are shown below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "maxfragmentationmemory_reserved": {
                "description": "Value in megabytes reserved to accommodate for memory fragmentation. Defaults are shown below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "rdb_backup_enabled": {
                "description": "Is Backup Enabled? Only supported on Premium SKU's.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "rdb_backup_frequency": {
                "description": "The Backup Frequency in Minutes. Only supported on Premium SKU's. Possible values are: `15`, `30`, `60`, `360`, `720` and `1440`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "rdb_backup_max_snapshot_count": {
                "description": "The maximum number of snapshots to create as a backup. Only supported for Premium SKU's.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "rdb_storage_connection_string": {
                "description": "The Connection String to the Storage Account. Only supported for Premium SKU's. In the format: `DefaultEndpointsProtocol=https;BlobEndpoint=${azurerm_storage_account.example.primary_blob_endpoint};AccountName=${azurerm_storage_account.example.name};AccountKey=${azurerm_storage_account.example.primary_access_key}`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "notify_keyspace_events": {
                "description": "Keyspace notifications allows clients to subscribe to Pub/Sub channels in order to receive events affecting the Redis data set in some way. [Reference](https://redis.io/topics/notifications#configuration)",
                "required": false,
                "policy": "",
                "notes": ""
            }
        },
        "attributes": {
            "id": {
                "description": "The Route ID."
            },
            "hostname": {
                "description": "The Hostname of the Redis Instance"
            },
            "ssl_port": {
                "description": "The SSL Port of the Redis Instance"
            },
            "port": {
                "description": "The non-SSL Port of the Redis Instance"
            },
            "primary_access_key": {
                "description": "The Primary Access Key for the Redis Instance"
            },
            "secondary_access_key": {
                "description": "The Secondary Access Key for the Redis Instance"
            },
            "primary_connection_string": {
                "description": "The primary connection string of the Redis Instance."
            },
            "secondary_connection_string": {
                "description": "The secondary connection string of the Redis Instance."
            },
            "redis_configuration": {
                "description": "A `redis_configuration` block as defined below:"
            },
            "maxclients": {
                "description": "Returns the max number of connected clients at the same time."
            }
        },
        "timeouts": {}
    }
}