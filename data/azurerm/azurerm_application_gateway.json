{
    "azurerm_application_gateway": {
        "status": "ASSESS",
        "subcategory": "Network",
        "layout": "azurerm",
        "page_title": "Azure Resource Manager: azurerm_application_gateway",
        "description": "Manages an Application Gateway.",
        "arguments": {
            "name": {
                "description": "Unique name of the rewrite rule block",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "resource_group_name": {
                "description": "The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "location": {
                "description": "The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "backend_address_pool": {
                "description": "One or more `backend_address_pool` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "backend_http_settings": {
                "description": "One or more `backend_http_settings` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "frontend_ip_configuration": {
                "description": "One or more `frontend_ip_configuration` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "frontend_port": {
                "description": "One or more `frontend_port` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "gateway_ip_configuration": {
                "description": "One or more `gateway_ip_configuration` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "http_listener": {
                "description": "One or more `http_listener` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "identity": {
                "description": "A `identity` block.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "request_routing_rule": {
                "description": "One or more `request_routing_rule` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "sku": {
                "description": "A `sku` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "zones": {
                "description": "A collection of availability zones to spread the Application Gateway over.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> **Please Note**: Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/en-us/azure/availability-zones/az-overview).  They are also only supported for [v2 SKUs](https://docs.microsoft.com/en-us/azure/application-gateway/application-gateway-autoscaling-zone-redundant)"
                ]
            },
            "authentication_certificate": {
                "description": "One or more `authentication_certificate` blocks.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "trusted_root_certificate": {
                "description": "One or more `trusted_root_certificate` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "ssl_policy": {
                "description": "a `ssl policy` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "enable_http2": {
                "description": "Is HTTP2 enabled on the application gateway resource? Defaults to `false`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "probe": {
                "description": "One or more `probe` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "ssl_certificate": {
                "description": "One or more `ssl_certificate` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "tags": {
                "description": "A mapping of tags to assign to the resource.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "url_path_map": {
                "description": "One or more `url_path_map` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "waf_configuration": {
                "description": "A `waf_configuration` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "custom_error_configuration": {
                "description": "One or more `custom_error_configuration` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "redirect_configuration": {
                "description": "A `redirect_configuration` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "autoscale_configuration": {
                "description": "A `autoscale_configuration` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "rewrite_rule_set": {
                "description": "One or more `rewrite_rule_set` blocks as defined below. Only valid for v2 SKUs.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "data": {
                "description": "PFX certificate. Required if `key_vault_secret_id` is not set.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "fqdns": {
                "description": "A list of FQDN's which should be part of the Backend Address Pool.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "ip_addresses": {
                "description": "A list of IP Addresses which should be part of the Backend Address Pool.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "cookie_based_affinity": {
                "description": "Is Cookie-Based Affinity enabled? Possible values are `Enabled` and `Disabled`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "affinity_cookie_name": {
                "description": "The name of the affinity cookie.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "path": {
                "description": "The Path used for this Probe.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "port": {
                "description": "The port used for this Frontend Port.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "probe_name": {
                "description": "The name of an associated HTTP Probe.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "protocol": {
                "description": "The Protocol used for this Probe. Possible values are `Http` and `Https`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "request_timeout": {
                "description": "The request timeout in seconds, which must be between 1 and 86400 seconds.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "host_name": {
                "description": "The Hostname which should be used for this HTTP Listener.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "pick_host_name_from_backend_address": {
                "description": "Whether host header should be picked from the host name of the backend server. Defaults to `false`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "trusted_root_certificate_names": {
                "description": "A list of `trusted_root_certificate` names.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "connection_draining": {
                "description": "A `connection_draining` block as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "enabled": {
                "description": "Is the Web Application Firewall be enabled?",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "drain_timeout_sec": {
                "description": "The number of seconds connection draining is active. Acceptable values are from `1` second to `3600` seconds.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "subnet_id": {
                "description": "The ID of a Subnet.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "private_ip_address": {
                "description": "The Private IP Address to use for the Application Gateway.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "public_ip_address_id": {
                "description": "The ID of a Public IP Address which the Application Gateway should use.",
                "required": false,
                "policy": "",
                "notes": [
                    "-> ",
                    " The Allocation Method for this Public IP Address should be set to `Dynamic`."
                ]
            },
            "private_ip_address_allocation": {
                "description": "The Allocation Method for the Private IP Address. Possible values are `Dynamic` and `Static`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "frontend_ip_configuration_name": {
                "description": "The Name of the Frontend IP Configuration used for this HTTP Listener.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "frontend_port_name": {
                "description": "The Name of the Frontend Port use for this HTTP Listener.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "host_names": {
                "description": "A list of Hostname(s",
                "required": false,
                "policy": "",
                "notes": [
                    "-> **NOTE** The `host_names` and `host_name` are mutually exclusive and cannot both be set."
                ]
            },
            "require_sni": {
                "description": "Should Server Name Indication be Required? Defaults to `false`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "ssl_certificate_name": {
                "description": "The name of the associated SSL Certificate which should be used for this HTTP Listener.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "type": {
                "description": "The Managed Service Identity Type of this Application Gateway. The only possible value is `UserAssigned`. Defaults to `UserAssigned`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "identity_ids": {
                "description": "Specifies a list with a single user managed identity id to be assigned to the Application Gateway.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "body": {
                "description": "A snippet from the Response Body which must be present in the Response..",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "status_code": {
                "description": "Status code of the application gateway customer error. Possible values are `HttpStatus403` and `HttpStatus502`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "paths": {
                "description": "A list of Paths used in this Path Rule.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "backend_address_pool_name": {
                "description": "The Name of the Backend Address Pool which should be used for this Routing Rule. Cannot be set if `redirect_configuration_name` is set.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "backend_http_settings_name": {
                "description": "The Name of the Backend HTTP Settings Collection which should be used for this Routing Rule. Cannot be set if `redirect_configuration_name` is set.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "redirect_configuration_name": {
                "description": "The Name of the Redirect Configuration which should be used for this Routing Rule. Cannot be set if either `backend_address_pool_name` or `backend_http_settings_name` is set.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "rewrite_rule_set_name": {
                "description": "The Name of the Rewrite Rule Set which should be used for this Routing Rule. Only valid for v2 SKUs.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "host": {
                "description": "The Hostname used for this Probe. If the Application Gateway is configured for a single site, by default the Host name should be specified as \u2018127.0.0.1\u2019, unless otherwise configured in custom probe. Cannot be set if `pick_host_name_from_backend_http_settings` is set to `true`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "interval": {
                "description": "The Interval between two consecutive probes in seconds. Possible values range from 1 second to a maximum of 86,400 seconds.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "timeout": {
                "description": "The Timeout used for this Probe, which indicates when a probe becomes unhealthy. Possible values range from 1 second to a maximum of 86,400 seconds.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "unhealthy_threshold": {
                "description": "The Unhealthy Threshold for this Probe, which indicates the amount of retries which should be attempted before a node is deemed unhealthy. Possible values are from 1 - 20 seconds.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "pick_host_name_from_backend_http_settings": {
                "description": "Whether the host header should be picked from the backend http settings. Defaults to `false`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "match": {
                "description": "A `match` block as defined above.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "minimum_servers": {
                "description": "The minimum number of servers that are always marked as healthy. Defaults to `0`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "rule_type": {
                "description": "The Type of Routing that should be used for this Rule. Possible values are `Basic` and `PathBasedRouting`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "http_listener_name": {
                "description": "The Name of the HTTP Listener which should be used for this Routing Rule.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "url_path_map_name": {
                "description": "The Name of the URL Path Map which should be associated with this Routing Rule.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "tier": {
                "description": "The Tier of the SKU to use for this Application Gateway. Possible values are `Standard`, `Standard_v2`, `WAF` and `WAF_v2`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "capacity": {
                "description": "The Capacity of the SKU to use for this Application Gateway. When using a V1 SKU this value must be between 1 and 32, and 1 to 125 for a V2 SKU. This property is optional if `autoscale_configuration` is set.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "password": {
                "description": "Password for the pfx file specified in data.  Required if `data` is set.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "key_vault_secret_id": {
                "description": "Secret Id of (base-64 encoded unencrypted pfx",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "default_backend_address_pool_name": {
                "description": "The Name of the Default Backend Address Pool which should be used for this URL Path Map. Cannot be set if `default_redirect_configuration_name` is set.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "default_backend_http_settings_name": {
                "description": "The Name of the Default Backend HTTP Settings Collection which should be used for this URL Path Map. Cannot be set if `default_redirect_configuration_name` is set.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "default_redirect_configuration_name": {
                "description": "The Name of the Default Redirect Configuration which should be used for this URL Path Map. Cannot be set if either `default_backend_address_pool_name` or `default_backend_http_settings_name` is set.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "default_rewrite_rule_set_name": {
                "description": "The Name of the Default Rewrite Rule Set which should be used for this URL Path Map. Only valid for v2 SKUs.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "path_rule": {
                "description": "One or more `path_rule` blocks as defined above.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "disabled_protocols": {
                "description": "A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1` and `TLSv1_2`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "policy_type": {
                "description": "The Type of the Policy. Possible values are `Predefined` and `Custom`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "policy_name": {
                "description": "The Name of the Policy e.g AppGwSslPolicy20170401S. Required if `policy_type` is set to `Predefined`. Possible values can change over time and",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "cipher_suites": {
                "description": "A List of accepted cipher suites. Possible values are: `TLS_DHE_DSS_WITH_AES_128_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA256`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA256`, `TLS_DHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_DHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384`, `TLS_RSA_WITH_3DES_EDE_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA256`, `TLS_RSA_WITH_AES_128_GCM_SHA256`, `TLS_RSA_WITH_AES_256_CBC_SHA`, `TLS_RSA_WITH_AES_256_CBC_SHA256` and `TLS_RSA_WITH_AES_256_GCM_SHA384`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "min_protocol_version": {
                "description": "The minimal TLS version. Possible values are `TLSv1_0`, `TLSv1_1` and `TLSv1_2`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "firewall_mode": {
                "description": "The Web Application Firewall Mode. Possible values are `Detection` and `Prevention`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "rule_set_type": {
                "description": "The Type of the Rule Set used for this Web Application Firewall.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "rule_set_version": {
                "description": "The Version of the Rule Set used for this Web Application Firewall. Possible values are `2.2.9`, `3.0`, and `3.1`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "disabled_rule_group": {
                "description": "one or more `disabled_rule_group` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "file_upload_limit_mb": {
                "description": "The File Upload Limit in MB. Accepted values are in the range `1`MB to `500`MB. Defaults to `100`MB.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "request_body_check": {
                "description": "Is Request Body Inspection enabled?  Defaults to `true`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "max_request_body_size_kb": {
                "description": "The Maximum Request Body Size in KB.  Accepted values are in the range `1`KB to `128`KB.  Defaults to `128`KB.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "exclusion": {
                "description": "one or more `exclusion` blocks as defined below.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "rule_group_name": {
                "description": "The rule group where specific rules should be disabled. Accepted values are:  `crs_20_protocol_violations`, `crs_21_protocol_anomalies`, `crs_23_request_limits`, `crs_30_http_policy`, `crs_35_bad_robots`, `crs_40_generic_attacks`, `crs_41_sql_injection_attacks`, `crs_41_xss_attacks`, `crs_42_tight_security`, `crs_45_trojans`, `General`, `REQUEST-911-METHOD-ENFORCEMENT`, `REQUEST-913-SCANNER-DETECTION`, `REQUEST-920-PROTOCOL-ENFORCEMENT`, `REQUEST-921-PROTOCOL-ATTACK`, `REQUEST-930-APPLICATION-ATTACK-LFI`, `REQUEST-931-APPLICATION-ATTACK-RFI`, `REQUEST-932-APPLICATION-ATTACK-RCE`, `REQUEST-933-APPLICATION-ATTACK-PHP`, `REQUEST-941-APPLICATION-ATTACK-XSS`, `REQUEST-942-APPLICATION-ATTACK-SQLI`, `REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "rules": {
                "description": "A list of rules which should be disabled in that group. Disables all rules in the specified group if `rules` is not specified.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "match_variable": {
                "description": "Match variable of the exclusion rule to exclude header, cookie or GET arguments. Possible values are `RequestHeaderNames`, `RequestArgNames` and `RequestCookieNames`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "selector_match_operator": {
                "description": "Operator which will be used to search in the variable content. Possible values are `Equals`, `StartsWith`, `EndsWith`, `Contains`. If empty will exclude all traffic on this `match_variable`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "selector": {
                "description": "String value which will be used for the filter operation. If empty will exclude all traffic on this `match_variable`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "custom_error_page_url": {
                "description": "Error page URL of the application gateway customer error.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "redirect_type": {
                "description": "The type of redirect. Possible values are `Permanent`, `Temporary`, `Found` and `SeeOther`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "target_listener_name": {
                "description": "The name of the listener to redirect to. Cannot be set if `target_url` is set.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "target_url": {
                "description": "The Url to redirect the request to. Cannot be set if `target_listener_name` is set.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "include_path": {
                "description": "Whether or not to include the path in the redirected Url. Defaults to `false`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "include_query_string": {
                "description": "Whether or not to include the query string in the redirected Url. Default to `false`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "min_capacity": {
                "description": "Minimum capacity for autoscaling. Accepted values are in the range `0` to `100`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "max_capacity": {
                "description": "Maximum capacity for autoscaling. Accepted values are in the range `2` to `125`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "rewrite_rule": {
                "description": "One or more `rewrite_rule` blocks as defined above.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "rule_sequence": {
                "description": "Rule sequence of the rewrite rule that determines the order of execution in a set.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "condition": {
                "description": "One or more `condition` blocks as defined above.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "request_header_configuration": {
                "description": "One or more `request_header_configuration` blocks as defined above.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "response_header_configuration": {
                "description": "One or more `response_header_configuration` blocks as defined above.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "variable": {
                "description": "The [variable](https://docs.microsoft.com/en-us/azure/application-gateway/rewrite-http-headers#server-variables",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "pattern": {
                "description": "The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "ignore_case": {
                "description": "Perform a case in-sensitive comparison. Defaults to `false`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "negate": {
                "description": "Negate the result of the condition evaluation. Defaults to `false`",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "header_name": {
                "description": "Header name of the header configuration.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "header_value": {
                "description": "Header value of the header configuration. To delete a response header set this property to an empty string.",
                "required": false,
                "policy": "",
                "notes": ""
            }
        },
        "attributes": {
            "id": {
                "description": "The ID of the Rewrite Rule Set"
            },
            "authentication_certificate": {
                "description": "A list of `authentication_certificate` blocks as defined below."
            },
            "backend_address_pool": {
                "description": "A list of `backend_address_pool` blocks as defined below."
            },
            "backend_http_settings": {
                "description": "A list of `backend_http_settings` blocks as defined below."
            },
            "frontend_ip_configuration": {
                "description": "A list of `frontend_ip_configuration` blocks as defined below."
            },
            "frontend_port": {
                "description": "A list of `frontend_port` blocks as defined below."
            },
            "gateway_ip_configuration": {
                "description": "A list of `gateway_ip_configuration` blocks as defined below."
            },
            "enable_http2": {
                "description": "(Optional) Is HTTP2 enabled on the application gateway resource? Defaults to `false`."
            },
            "http_listener": {
                "description": "A list of `http_listener` blocks as defined below."
            },
            "probe": {
                "description": "A `probe` block as defined below."
            },
            "request_routing_rule": {
                "description": "A list of `request_routing_rule` blocks as defined below."
            },
            "ssl_certificate": {
                "description": "A list of `ssl_certificate` blocks as defined below."
            },
            "url_path_map": {
                "description": "A list of `url_path_map` blocks as defined below."
            },
            "custom_error_configuration": {
                "description": "A list of `custom_error_configuration` blocks as defined below."
            },
            "redirect_configuration": {
                "description": "A list of `redirect_configuration` blocks as defined below."
            },
            "probe_id": {
                "description": "The ID of the associated Probe."
            },
            "frontend_ip_configuration_id": {
                "description": "The ID of the associated Frontend Configuration."
            },
            "frontend_port_id": {
                "description": "The ID of the associated Frontend Port."
            },
            "ssl_certificate_id": {
                "description": "The ID of the associated SSL Certificate."
            },
            "backend_address_pool_id": {
                "description": "The ID of the associated Backend Address Pool."
            },
            "backend_http_settings_id": {
                "description": "The ID of the associated Backend HTTP Settings Configuration."
            },
            "redirect_configuration_id": {
                "description": "The ID of the associated Redirect Configuration."
            },
            "rewrite_rule_set_id": {
                "description": "The ID of the associated Rewrite Rule Set."
            },
            "http_listener_id": {
                "description": "The ID of the associated HTTP Listener."
            },
            "url_path_map_id": {
                "description": "The ID of the associated URL Path Map."
            },
            "public_cert_data": {
                "description": "The Public Certificate Data associated with the SSL Certificate."
            },
            "default_backend_address_pool_id": {
                "description": "The ID of the Default Backend Address Pool."
            },
            "default_backend_http_settings_id": {
                "description": "The ID of the Default Backend HTTP Settings Collection."
            },
            "default_redirect_configuration_id": {
                "description": "The ID of the Default Redirect Configuration."
            },
            "path_rule": {
                "description": "A list of `path_rule` blocks as defined above."
            }
        },
        "timeouts": {
            "create": {
                "description": "Used when creating the Application Gateway.",
                "required": false,
                "timeout": 90
            },
            "update": {
                "description": "Used when updating the Application Gateway.",
                "required": false,
                "timeout": 90
            },
            "read": {
                "description": "Used when retrieving the Application Gateway.",
                "required": false,
                "timeout": 5
            },
            "delete": {
                "description": "Used when deleting the Application Gateway.",
                "required": false,
                "timeout": 90
            }
        }
    }
}