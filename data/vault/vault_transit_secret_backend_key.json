{
    "vault_transit_secret_backend_key": {
        "status": "ASSESS",
        "layout": "vault",
        "page_title": "Vault: vault_transit_secret_backend_key resource",
        "sidebar_current": "docs-vault-resource-transit-secret-backend-key",
        "description": "Create an Encryption Keyring on a Transit Secret Backend for Vault.",
        "arguments": {
            "backend": {
                "description": "The path the transit secret backend is mounted at, with no leading or trailing `/`s.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "name": {
                "description": "The name to identify this key within the backend. Must be unique within the backend.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "type": {
                "description": "Specifies the type of key to create. The currently-supported types are: `aes256-gcm96` (default), `chacha20-poly1305`, `ed25519`, `ecdsa-p256`, `rsa-2048` and `rsa-4096`. ",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "deletion_allowed": {
                "description": "Specifies if the keyring is allowed to be deleted. Must be set to 'true' before terraform will be able to destroy keys.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "derived": {
                "description": "Specifies if key derivation is to be used. If enabled, all encrypt/decrypt requests to this key must provide a context which is used for key derivation.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "convergent_encryption": {
                "description": "Whether or not to support convergent encryption, where the same plaintext creates the same ciphertext. This requires `derived` to be set to `true`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "exportable": {
                "description": "Enables keys to be exportable. This allows for all valid private keys in the keyring to be exported. Once set, this cannot be disabled.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allow_plaintext_backup": {
                "description": "Enables taking backup of entire keyring in the plaintext format. Once set, this cannot be disabled.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "min_decryption_version": {
                "description": "Minimum key version to use for decryption.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "min_encryption_version": {
                "description": "Minimum key version to use for encryption",
                "required": false,
                "policy": "",
                "notes": ""
            }
        },
        "attributes": {},
        "timeouts": {}
    }
}