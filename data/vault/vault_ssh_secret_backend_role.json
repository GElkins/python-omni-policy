{
    "vault_ssh_secret_backend_role": {
        "status": "ASSESS",
        "layout": "vault",
        "page_title": "Vault: vault_ssh_secret_backend_role resource",
        "sidebar_current": "docs-vault-resource-ssh-secret-backend-role",
        "description": "Managing roles in an SSH secret backend in Vault",
        "arguments": {
            "name": {
                "description": "Specifies the name of the role to create.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "backend": {
                "description": "The path where the SSH secret backend is mounted.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "key_type": {
                "description": " Specifies the type of credentials generated by this role. This can be either `otp`, `dynamic` or `ca`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allow_bare_domains": {
                "description": "Specifies if host certificates that are requested are allowed to use the base domains listed in `allowed_domains`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allow_host_certificates": {
                "description": "Specifies if certificates are allowed to be signed for use as a 'host'.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allow_subdomains": {
                "description": "Specifies if host certificates that are requested are allowed to be subdomains of those listed in `allowed_domains`.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allow_user_certificates": {
                "description": "Specifies if certificates are allowed to be signed for use as a 'user'.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allow_user_key_ids": {
                "description": "Specifies if users can override the key ID for a signed certificate with the `key_id` field.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allowed_critical_options": {
                "description": "Specifies a comma-separated list of critical options that certificates can have when signed.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allowed_domains": {
                "description": "The list of domains for which a client can request a host certificate.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "cidr_list": {
                "description": "The comma-separated string of CIDR blocks for which this role is applicable.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allowed_extensions": {
                "description": "Specifies a comma-separated list of extensions that certificates can have when signed.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "default_extensions": {
                "description": "Specifies a map of extensions that certificates have when signed.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "default_critical_options": {
                "description": "Specifies a map of critical options that certificates have when signed.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allowed_users": {
                "description": "Specifies a comma-separated list of usernames that are to be allowed, only if certain usernames are to be allowed.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "default_user": {
                "description": "Specifies the default username for which a credential will be generated.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "key_id_format": {
                "description": "Specifies a custom format for the key id of a signed certificate.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "allowed_user_key_lengths": {
                "description": "Specifies a map of ssh key types and their expected sizes which are allowed to be signed by the CA type.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "max_ttl": {
                "description": "Specifies the maximum Time To Live value.",
                "required": false,
                "policy": "",
                "notes": ""
            },
            "ttl": {
                "description": "Specifies the Time To Live value.",
                "required": false,
                "policy": "",
                "notes": ""
            }
        },
        "attributes": {},
        "timeouts": {}
    }
}